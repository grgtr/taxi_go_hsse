version: '3'
services:
  mongo:
    image: mongo
    container_name: mongo-container-global
    networks:
      - kafka-network
    ports:
      - "27013:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: my_db
    volumes:
      - ./data:/data/db

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    networks:
      - kafka-network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: trips_history
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kafka-network

  trip:
    build:
      context: trip-cvc
      dockerfile: ./Dockerfile
    networks:
      - kafka-network
    depends_on:
      - kafka

  client:
    ports:
      - "8060:8060"
    build:
      context: client-cvc
      dockerfile: ./Dockerfile
    networks:
      - kafka-network
    depends_on:
      - kafka
  offering:
    ports:
      - "8099:8099"
    build:
      context: offering-cvc
      dockerfile: ./Dockerfile
    networks:
      - kafka-network
    depends_on:
      - kafka
networks:
  kafka-network:
